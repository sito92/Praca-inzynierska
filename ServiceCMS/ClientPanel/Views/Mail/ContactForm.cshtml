@using Modules.Resources
@model ClientPanel.Models.Mail.MailViewModel
@{
    //ViewBag.Title = Presentation.ContactForm;
}
@if (TempData["ErrorMessage"]!=null)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>@Presentation.Error!</strong> @TempData["ErrorMessage"].ToString()
    </div>
}
@if (TempData["SuccessMessage"]!=null)
{
    <div class="alert alert-success alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <strong>@Presentation.WellDone.</strong> @TempData["SuccessMessage"].ToString()
    </div>
}

@using (Html.BeginForm("SendMail", "Mail", FormMethod.Post,
    new {enctype = "multipart/form-data"}))
{
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.TextBoxFor(x => x.ClientEmailAddres,new {@class = "form-control input-lg",required = "", placeholder = Presentation.News})
                @Html.ValidationMessageFor(x => x.ClientEmailAddres) 
            </div>
            <div class="form-group">
                @Html.TextBoxFor(x => x.Subject, new { @class = "form-control input-lg", required = "", placeholder = Presentation.News })
                @Html.ValidationMessageFor(x => x.Subject)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.TextAreaFor(x => x.Content, new { @class = "form-control input-lg contactForm", required = "", placeholder = Presentation.News })
                @Html.ValidationMessageFor(x => x.Content)
            </div>
        </div>
    </div>
    <div class="form-group">
        <button class="btn btn-lg btn-primary btn-block">SEND</button>
    </div>
}